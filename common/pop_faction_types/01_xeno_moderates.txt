##############################
# Xeno Moderates
##############################

xeno_moderate = {
	election_header = "GFX_faction_header_yellow"
	guiding_ethic = ethic_xenophile

	unique = yes
	support_multiplier = 1

	resources = {
		category = pop_moderate_factions
		produces = {
			influence = 1
		}
	}

	is_potential = {
		years_passed > 10
		has_encountered_other_species = yes
		NOR = { 
			has_ethic = ethic_gestalt_consciousness 
			has_ethic = ethic_fanatic_xenophile
			has_ethic = ethic_fanatic_xenophobe
		}
		count_owned_pops = {
			count >= 2
			limit = {
				has_ethic = ethic_xenophile
			}
		}
		count_owned_pops = {
			count >= 2
			limit = {
				has_ethic = ethic_xenophobe
			}
		}
	}

	parameters = {
		empire = {
			type = country
			valid_objects = {
				is_same_value = root
			}
		}
	}

	can_join_pre_triggers = {
		is_enslaved = no
		is_being_purged = no
	}

	can_join_faction = {
		is_shackled_robot = no
		NOT = { has_trait = trait_nerve_stapled }
		OR = {
			has_ethic = ethic_xenophile
			has_ethic = ethic_fanatic_xenophile
			has_ethic = ethic_xenophobe
			has_ethic = ethic_fanatic_xenophobe
		}
	}

	attraction = {
		base = 150

		modifier = {
			factor = 1.25
			exists = from
			from = {
				exists = leader
				leader = { leader_class = ruler }
			}
		}

		modifier = {
			factor = 0.75
			exists = from
			from = {
				NOT = { exists = leader }
			}
		}
	}

	leader = {
		base = 100

		modifier = {
			factor = 0.0
			is_event_leader = yes
		}
	}

	on_create = {
		pop_faction_event = { id = factions.1 }
	}

	demand = {
		title = "SUPREMACIST_RULER_SAME_SPECIES"
		unfulfilled_title = "SUPREMACIST_RULER_NOT_SAME_SPECIES"
		desc = "SUPREMACIST_RULER_NOT_SAME_SPECIES_DESC"

		fulfilled_effect = 10
		unfulfilled_effect = -30

		potential = {
			exists = owner
			owner = { NOT = { has_valid_civic = civic_fanatic_purifiers } }
		}

		trigger = {
			owner = {
				exists = ruler
				ruler = { is_same_species = owner_species }
			}
		}
	}

	demand = { # "XENOIST_NO_SLAVES"
		title = "XENOIST_NO_SLAVES"
		unfulfilled_title = "XENOIST_SLAVES"
		desc = "XENOIST_NO_SLAVES_DESC"

		unfulfilled_effect = -25
		fulfilled_effect = 0.001

		potential = {
			exists = owner
			owner = {
				any_owned_pop = {
					NOR = {
						is_same_species = root.owner
						is_robot_pop = yes
						is_sapient = no
					}
				}
			}
		}

		trigger = {
			owner = {
				NOT = {
					#has_policy_flag = slavery_allowed
					any_owned_pop = {
						has_citizenship_type = { country = prev type = citizenship_slavery }
					}
				}
			}
		}
	}

	demand = { # "XENOIST_NO_PURGE"
		title = "XENOIST_NO_PURGE"
		unfulfilled_title = "XENOIST_PURGE"
		desc = "XENOIST_NO_PURGE_DESC"

		unfulfilled_effect = -25
		fulfilled_effect = 0.001

		potential = {
			exists = owner
		}

		trigger = {
			owner = {
				NOR = {
					has_policy_flag = purge_displacement_only
					has_policy_flag = purge_allowed
				}
			}
		}
	}

	demand = {
		title = "XENOIST_ENCLAVE_BORDERS"
		unfulfilled_title = "XENOIST_NO_ENCLAVE_BORDERS"
		desc = "XENOIST_ENCLAVE_BORDERS_DESC"

		fulfilled_effect = 5
		unfulfilled_effect = -0.001

		potential = {
			exists = owner
			owner = {
				any_country = {
					is_country_type = enclave
					has_communications = root.owner
				}
			}
		}

		trigger = {
			owner = {
				any_system_within_border = {
					any_fleet_in_system = {
						exists = owner
						owner = { is_country_type = enclave }
					}
				}
			}
		}
	}

	demand = {
		title = "XENOIST_RECENT_UPLIFT"
		unfulfilled_title = "XENOIST_NO_RECENT_UPLIFT"
		desc = "XENOIST_RECENT_UPLIFT_DESC"

		fulfilled_effect = 10
		unfulfilled_effect = -0.001

		potential = {
			exists = owner
			owner = {
				has_technology = tech_epigenetic_triggers
			}
		}

		trigger = {
			owner = {
				has_country_flag = recent_uplift_timed
			}
		}
	}

	demand = {
		title = "XENOIST_RECENT_ENLIGHTENMENT"
		unfulfilled_title = "XENOIST_NO_RECENT_ENLIGHTENMENT"
		desc = "XENOIST_RECENT_ENLIGHTENMENT_DESC"

		fulfilled_effect = 10
		unfulfilled_effect = -0.001

		potential = {
			exists = owner
			owner = {
				OR = {
					any_owned_ship = { is_ship_size = observation_station }
					has_country_flag = recent_enlightenment_timed
					# fixes demand disappearing when fulfilled (station dismantles)
				}
			}
		}

		trigger = {
			owner = {
				has_country_flag = recent_enlightenment_timed
			}
		}
	}

	demand = {
		title = "XENOIST_RECENT_COMMS"
		unfulfilled_title = "XENOIST_NO_RECENT_COMMS"
		desc = "XENOIST_RECENT_COMMS_DESC"

		fulfilled_effect = 5
		unfulfilled_effect = -0.001

		potential = {
			exists = owner
			owner = {
				any_country = {
					NOT = { has_communications = prev}
					OR = {
						is_country_type = default
						is_country_type = fallen_empire
						is_country_type = awakened_fallen_empire
					}
				}
			}
		}

		trigger = {
			owner = {
				has_country_flag = recent_comms_timed
			}
		}
	}

	demand = {
		title = "XENOIST_FEDERATED"
		unfulfilled_title = "XENOIST_NOT_FEDERATED"
		desc = "XENOIST_FEDERATED_DESC"

		fulfilled_effect = 20
		unfulfilled_effect = -0.001

		potential = {
			exists = owner
			owner = {
				num_communications > 3
			}
		}

		trigger = {
			owner = {
				has_federation = yes
			}
		}
	}

	demand = {
		title = "SUPREMACIST_GIANT_MASSACRE"
		unfulfilled_title = "SUPREMACIST_NO_GIANT_MASSACRE"
		desc = "SUPREMACIST_GIANT_MASSACRE_DESC"

		fulfilled_effect = 10
		unfulfilled_effect = -0.001

		potential = {
			exists = owner
			owner = {
				host_has_dlc = "Leviathans Story Pack"
				any_country = {
					OR = {
						is_country_type = guardian
						is_country_type = guardian_dragon
						is_country_type = guardian_stellarite
						is_country_type = guardian_wraith
						is_country_type = guardian_hiver
						is_country_type = guardian_horror
						is_country_type = guardian_fortress
						is_country_type = guardian_dreadnought
						is_country_type = guardian_sphere
						is_country_type = guardian_scavenger_bot
						is_country_type = guardian_elderly_tiyanki
						is_country_type = guardian_hatchling
					}
					has_communications = prev
				}
			}
		}

		trigger = {
			owner = {
				has_country_flag = killed_guardian
			}
		}
	}
}